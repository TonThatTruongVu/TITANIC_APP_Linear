import streamlit as st
import numpy as np
import pandas as pd
import joblib
import os

# ƒê·ªãnh nghƒ©a ƒë∆∞·ªùng d·∫´n m√¥ h√¨nh v√† scaler
MODEL_PATH = "models/model.pkl"
SCALER_PATH = "models/scaler.pkl"

# Ki·ªÉm tra v√† t·∫£i scaler
if not os.path.exists(SCALER_PATH):
    st.error("Kh√¥ng t√¨m th·∫•y file scaler.pkl. H√£y ch·∫°y l·∫°i data_processing.py ƒë·ªÉ t·∫°o scaler.")
    st.stop()
scaler = joblib.load(SCALER_PATH)

# Ki·ªÉm tra v√† t·∫£i m√¥ h√¨nh
if not os.path.exists(MODEL_PATH):
    st.error("Kh√¥ng t√¨m th·∫•y file model.pkl. H√£y ƒë·∫£m b·∫£o ƒë√£ l∆∞u m√¥ h√¨nh v√†o th∆∞ m·ª•c models/.")
    st.stop()
model = joblib.load(MODEL_PATH)

# Giao di·ªán Streamlit
st.title("üö¢ D·ª± ƒëo√°n kh·∫£ nƒÉng s·ªëng s√≥t tr√™n Titanic")

# Nh·∫≠p th√¥ng tin h√†nh kh√°ch
pclass = st.selectbox("H·∫°ng v√©", [1, 2, 3])
sex = st.radio("Gi·ªõi t√≠nh", ["Nam", "N·ªØ"])
age = st.number_input("Tu·ªïi", min_value=1, max_value=100, value=30)
sibsp = st.number_input("S·ªë anh ch·ªã em / v·ª£ ch·ªìng ƒëi c√πng", min_value=0, max_value=10, value=0)
parch = st.number_input("S·ªë cha m·∫π / con c√°i ƒëi c√πng", min_value=0, max_value=10, value=0)
fare = st.number_input("Gi√° v√©", min_value=0.0, max_value=500.0, value=50.0)

# Chuy·ªÉn ƒë·ªïi d·ªØ li·ªáu ƒë·∫ßu v√†o
sex = 1 if sex == "N·ªØ" else 0
input_data = pd.DataFrame([[pclass, sex, age, sibsp, parch, fare]],
                          columns=["Pclass", "Sex", "Age", "SibSp", "Parch", "Fare"])

# Chu·∫©n h√≥a d·ªØ li·ªáu ƒë·∫ßu v√†o
input_data_scaled = scaler.transform(input_data)

# D·ª± ƒëo√°n khi nh·∫•n n√∫t
if st.button(" D·ª± ƒëo√°n"):
    try:
        prediction = model.predict(pd.DataFrame(input_data_scaled, 
                                                columns=["Pclass", "Sex", "Age", "SibSp", "Parch", "Fare"]))[0]
        st.success(f"### X√°c su·∫•t s·ªëng s√≥t d·ª± ƒëo√°n: {round(prediction, 2)}")
    except Exception as e:
        st.error(f"L·ªói trong qu√° tr√¨nh d·ª± ƒëo√°n: {e}")
